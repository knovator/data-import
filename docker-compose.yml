services:
  rabbitMQ:
    image: rabbitmq:management-alpine
    restart: unless-stopped
    container_name: data-import-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      # AMQP protocol port
      - 5672:5672
      # HTTP management UI
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      # - ./conf/myrabbit.conf:/etc/rabbitmq/rabbitmq.config
    networks:
      - knovator

  # mongo:
  #   image: mongo
  #   restart: unless-stopped
  #   container_name: data-import-mongo
  #   env_file: ./.env
  #   depends_on:
  #     - rabbitMQ
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
  #     - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
  #   ports:
  #     - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
  #   # volumes:
  #   #   - db:/data/db
  #   networks:
  #     - knovator
  app:
    depends_on:
      # - mongo
      - rabbitMQ
    links:
      - rabbitMQ
      # - mongo
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    working_dir: /app
    container_name: data-import-node
    tty: true
    command:
      [
        "sh",
        "-c",
        "/bin/wait-for-it.sh rabbitMQ:5672 -- sh ./init.sh"
      ]
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - RABBIT_MQ_CONN=$RABBIT_MQ_CONN
    networks:
      - knovator
    volumes:
      - .:/app

  rabbit-service:
    depends_on:
      - app
    working_dir: /rabbitmq
    build:
      context: ./
      dockerfile: ./rabbitMQ/Dockerfile
    container_name: rabbit-service
    command:
      [
        "sh",
        "-c",
        "/bin/wait-for-it.sh app:1111 -- npm run mq-service"
      ]
    networks:
      - knovator

  rabbit-worker:
    working_dir: /rabbitmq
    build:
      context: ./
      dockerfile: ./rabbitMQ/Dockerfile
    depends_on:
      - rabbit-service
    container_name: rabbit-worker
    command:
      [
        "sh",
        "-c",
        "/bin/wait-for-it.sh app:1111 -- npm run mq-worker"
      ]
    networks:
      - knovator

networks:
  knovator:
    driver: bridge
